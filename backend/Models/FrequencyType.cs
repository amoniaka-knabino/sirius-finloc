/* 
 * Получение публичной информации о банковских продуктах
 *
 * Содержит описываются API для Открытых банковских интерфейсов для получения публичной информации о банковских продуктах.
 *
 * OpenAPI spec version: 1.3.1
 * Contact: info@fintechru.org
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Частота применения в периоде времени
    /// </summary>
    /// <value>Частота применения в периоде времени</value>
    [JsonConverter(typeof(StringEnumConverter))]
        public enum FrequencyType
    {
        /// <summary>
        /// Enum Daily for value: Daily | Ежедневно
        /// </summary>
        [EnumMember(Value = "Daily | Ежедневно")]
        Daily = 1,
        /// <summary>
        /// Enum Weekly for value: Weekly | Еженедельно
        /// </summary>
        [EnumMember(Value = "Weekly | Еженедельно")]
        Weekly = 2,
        /// <summary>
        /// Enum Monthly for value: Monthly | Ежемесячно
        /// </summary>
        [EnumMember(Value = "Monthly | Ежемесячно")]
        Monthly = 3,
        /// <summary>
        /// Enum Quarterly for value: Quarterly | Поквартально
        /// </summary>
        [EnumMember(Value = "Quarterly | Поквартально")]
        Quarterly = 4,
        /// <summary>
        /// Enum Yearly for value: Yearly | Ежегодно
        /// </summary>
        [EnumMember(Value = "Yearly | Ежегодно")]
        Yearly = 5,
        /// <summary>
        /// Enum PerOccurrence for value: PerOccurrence | По возникновению события
        /// </summary>
        [EnumMember(Value = "PerOccurrence | По возникновению события")]
        PerOccurrence = 6,
        /// <summary>
        /// Enum Other for value: Other | Другое
        /// </summary>
        [EnumMember(Value = "Other | Другое")]
        Other = 7    }
}
